import codecs
from PIL import Image
import cv2
import os

def bitstring_to_bytes(s):
    return int(s, 2).to_bytes((len(s) + 7) // 8, byteorder='big')

with open('1.zip', 'rb') as f:
    bytes_data = f.read()
hex_data = codecs.encode(bytes_data, "hex_codec")


bin_data = bin(int(hex_data, 16))
#print(bytes_data)

zipcontent = bitstring_to_bytes(bin_data)
zipcontent = zipcontent[1:]
with open('output.zip', 'wb') as f:
    f.write(zipcontent)

with open("bytesnormaux.txt",'w') as f:
    f.write(str(bytes_data))

with open("bytespasbien.txt",'w') as f:
    f.write(str(zipcontent))

img2 = Image.new('RGB', (1280, 720), 'white')
img2.putpixel((100, 100), (0, 0, 0))
img2.putpixel((101, 100), (0, 0, 0))
img2.putpixel((102, 100), (0, 0, 0))
img2.putpixel((103, 100), (0, 0, 0))
img2.putpixel((104, 100), (0, 0, 0))

img2.save('image2.bmp')



img = Image.new('RGB', (1280, 720), 'white')
x = 0
y = 0
count = 0
nbimg = 1
cap = 230400
newcap = cap
finish = False

print(len(bin_data))
print(bin_data)


while finish != True:
    while y < 779:
        while x < 1279:
            if str(bin_data[count]) == str(0):
                img.putpixel((x, y), (0, 0, 0))
                img.putpixel((x+1, y), (0, 0, 0))
                img.putpixel((x, y+1), (0, 0, 0))
                img.putpixel((x+1, y+1), (0, 0, 0))
        
        


            count += 1
            x = x + 2
        y = y + 2  
        x = 0

print(count)

